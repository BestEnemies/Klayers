events:
  - schedule: cron(0 2 1 * ? *)  # runs on the first of the month
name: ${self:custom.pipelineName}-invoke
definition:
  Comment: "Invoke the pipeline for all packages"
  StartAt: DownloadConfig
  States:
    DownloadConfig:
      Type: Task
      Resource:
        Fn::GetAtt: [DownloadUnderscoreconfigLambdaFunction, Arn]
      Next: Invoke
    Invoke:
      Type: Task
      Resource:
        Fn::GetAtt: [InvokeUnderscorepipelineLambdaFunction, Arn]
      Next: WaitForCompletion
    WaitForCompletion:
      Type: Wait
      Seconds: 600
      Next: InvalidateCache
    InvalidateCache:
      Type: Task
      Resource:
        Fn::GetAtt: [InvalidateUnderscorecacheLambdaFunction, Arn]
      Next: Done
    Done:
      Type: Succeed
notifications:
  ABORTED:
    - lambda:
        Fn::GetAtt: [SlackUnderscoreinvokepipelineLambdaFunction, Arn]
  FAILED:
    - lambda:
        Fn::GetAtt: [SlackUnderscoreinvokepipelineLambdaFunction, Arn]
  TIMED_OUT:
    - lambda:
        Fn::GetAtt: [SlackUnderscoreinvokepipelineLambdaFunction, Arn]